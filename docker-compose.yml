services:

  db:
    container_name: is-db
    build: docker/images/db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  api-entities:
    container_name: api-entities
    build: docker/images/javascript
    volumes:
      - ./src/api/entities:/usr/src/app
      - ./docker/volumes/xml:/xml
    ports:
      - "20001:3000"
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      DATABASE_URL: postgresql://is:is@db-rel:5432/is?schema=public 

  golang-migrator:
    container_name: golang-migrator
    build: docker/images/golang
    volumes:
      - ./src/migrator/golang:/usr/src/app
      #- ./docker/volumes/xml:/xml
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
    depends_on:
      - golang-watcher

  golang-watcher:
    container_name: golang-watcher
    build: docker/images/golang
    volumes:
      - ./src/watcher/golang:/usr/src/app
      #- ./docker/volumes/xml:/xml
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
    depends_on:
      - db

  importer:
    container_name: importer
    build: docker/images/python
    volumes:
        - "./src/daemon/importer:/app"
        - "./src/base_dados:/app/base_dados"
        - "./docker/volumes/xml:/app/xml"
        - "./docker/volumes/csv:/app/csv"

    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      NUM_XML_PARTS: ${NUM_XML_PARTS}
    depends_on:
      - db

  rpc-server:
    container_name: is-rpc-server
    build: docker/images/python
    volumes:
      - "./src/rpc-server:/app"
    depends_on:
      - db

  rpc-client:
    container_name: is-rpc-client
    build: docker/images/python
    volumes:
      - "./src/rpc-client:/app"
    depends_on:
      - rpc-server

  broker:
    container_name: rabbitmq
    image: "rabbitmq:3.12.9-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping", "-q" ]
      interval: 30s
      timeout: 10s
      retries: 5

  api-proc:
    container_name: api-proc
    build: docker/images/python
    volumes:
      - ./src/api/proc/app:/app
      #- ./docker/volumes/xml:/xml
    ports:
      - "8090:8091"
    environment:
      API_PORT: 8091

  # frontend-proc:
  #   container_name: frontend-proc
  #   build: docker/images/web
  #   volumes:
  #     - ./src/frontend/proc:/usr/src/app
  #     - ./src/frontend/_shared/components:/usr/src/app/components
  #     - ./src/frontend/_shared/public:/usr/src/app/public
  #   ports:
  #     - "8092:8093"
  #   environment:
  #     USE_DEV_MODE: ${USE_DEV_MODE}
  #     API_PROC_URL: "localhost:8091"
  #   depends_on:
  #     - api-proc

volumes:
  postgres_data:
